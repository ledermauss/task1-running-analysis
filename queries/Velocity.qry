//*****************************************************************************
// Title:         Velocity
// Description:   Velocity description
// Dependencies:  None
// Author:        istmapara
//
//*****************************************************************************

package com.softwareag.saep;


query Velocity {	
	//Hier werden die Momentan Geschwendichkeit der Spielern extraierte,
	//Und die Sensoresn werden zu dem sprechenden Spieler zugeordnet
	inputs  {
		SensorEvent() key sensorId retain 1;
	}

	
	find  SensorEvent : s1  {
		%custom("title":"Velocity") {
			//Sensor::Player
			dictionary<integer, integer> sensorPlayer := {4:0,8:0,10:0,12:0,
				13:1,14:1,97:1,98:1, 47:2,16:2, 49:3,88:3, 19:4,52:4, 
				53:5,54:5, 23:6,24:6, 57:7,58:7, 59:8,28:8, 61:9,62:9,99:9,100:9,
				63:10,64:10,65:11,66:11, 67:12,68:12, 69:13,38:13, 71:14,40:14,
				73:15,74:15,75:16,44:16,105:17,106:17
			}; 
			dictionary<integer, string> playerNameDict := {0:"Ball",
				1:"Nick Gertje", 2:"Dennis Dotterweich", 3:"Niklas Walzlein",
				4:"Wili Sommer",5:"Philipp Harlass", 6:"Roman Hartleb", 
				7:"Erik Engelhardt", 8:"Sandro Schneider", 9:"Leon Krapf",
				10:"Kevin Baer",11:"Luca Ziegler", 12:"Ben Mueller", 13:"Vale Reitstetter",
				14:"Christopher Lee",15:"Leon Heinze",16:"Leo Langhans",17:"Referee"
			}; 
			//integer sensorId := sensorId;
			integer playerId := sensorPlayer[sensorId];
			string playerName := playerNameDict[playerId];
			 send PlayerEvent(playerId, playerName, s1.velocity, s1.velocityX, s1.timeStamp)
			 to "";
		}
	}
}
