//*****************************************************************************
// Title:         FunfzigHz
// Description:   FunfzigHz description
// Dependencies:  None
// Author:        istmapara
//
//*****************************************************************************

package com.softwareag.saep;
using com.apama.aggregates.min;
using com.apama.aggregates.max;
using com.apama.aggregates.mean;

query FunfzigHz {	
	inputs  {
		PlayerEvent() key playerId, playerName within 20 msec;
		//oder retain 4
	}

	
	find  every PlayerEvent : pe 
		select min(pe.timestamp) : ts_start 
		select max(pe.timestamp) : ts_stop 
		select mean(pe.velocity.toFloat()) : speedAvg
		select mean(pe.velocityX.toFloat()) : speedXAvg
		{
		%custom("title":"50Hz")  {
			//integer sensorId := sensorId;
			string intensity :="";
			float vInKmH := speedAvg * 3.6e-6;
			
			if ((vInKmH >= 0.0) and (vInKmH <=1.0)) then{
				
				intensity := "Standing";
			} else if (vInKmH <=11.0) then{
				
				intensity := "Trot";
			}else if (vInKmH <=14.0) then{
				
				intensity := "Low";
			}else if (vInKmH <=17.0) then{
				
				intensity := "Medium";
			}else if (vInKmH <=24.0) then{
				
				intensity := "High";
			}else{
				
				intensity := "Sprint";
			}

			float distance := (speedAvg * 1e-6) * ((ts_stop.toFloat() * 1e-12) - (ts_start.toFloat() * 1e-12));
			
			send PlayerStatistics(ts_start, ts_stop, playerId, playerName,
				intensity, distance,
				vInKmH) to "";
				
		}
	}
}